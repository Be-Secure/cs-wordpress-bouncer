version: "3"
services:
    wordpress5-6:
        build:
            context: .
            dockerfile: ./docker/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw

    wordpress5-5:
        build:
            context: .
            dockerfile: ./docker/wp5.5/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw
    
    wordpress5-4:
        build:
            context: .
            dockerfile: ./docker/wp5.4/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw
    
    wordpress5-3:
        build:
            context: .
            dockerfile: ./docker/wp5.3/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw

    wordpress5-2:
        build:
            context: .
            dockerfile: ./docker/wp5.2/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw

    wordpress5-1:
        build:
            context: .
            dockerfile: ./docker/wp5.1/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw

    wordpress5-0:
        build:
            context: .
            dockerfile: ./docker/wp5.0/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw

    wordpress4-9:
        build:
            context: .
            dockerfile: ./docker/wp4.9/php-${CS_WORDPRESS_BOUNCER_PHP_VERSION}.Dockerfile
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        environment:
            WORDPRESS_DB_PASSWORD: super_secret_password
            WORDPRESS_DEBUG: 1 # Comment this line the simulate the production mode
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_CRON_LOCK_TIMEOUT', 1);
        # more here https://hub.docker.com/_/wordpress
        ports:
            - "80:80"
        volumes:
            - .:/var/www/html/wp-content/plugins/cs-wordpress-bouncer:rw

    crowdsec:
        image: crowdsecurity/crowdsec:latest
        environment:
            - DISABLE_AGENT=true
        ports:
            - "8080:8080"
    mysql:
        image: mysql:5.7
        environment:
            - MYSQL_ROOT_PASSWORD=super_secret_password
            - MYSQL_DATABASE=wordpress
    redis:
        image: redis:6-alpine
        ports:
            - "6379:6379"
    memcached:
        image: memcached:1-alpine
    wpscan:
        image: wpscanteam/wpscan
    e2e:
        image: mcr.microsoft.com/playwright:focal
        environment:
            WORDPRESS_VERSION: ${WORDPRESS_VERSION}
            WATCHER_LOGIN: ${WATCHER_LOGIN}
            WATCHER_PASSWORD: ${WATCHER_PASSWORD}
            BOUNCER_KEY: ${BOUNCER_KEY}
            LAPI_URL_FROM_CONTAINERS: http://crowdsec:8080
            LAPI_URL_FROM_HOST: http://crowdsec:8080
            WORDPRESS_URL: ${WORDPRESS_URL}
            NETWORK_IFACE: eth0
        depends_on:
            - crowdsec
            - mysql
            - redis
            - memcached
        volumes:
            - ./tests/functional:/var/run/tests:rw
        command: tail -F anything
